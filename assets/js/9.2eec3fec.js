(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前些天尝试着投了些简历，约到了场面试，回忆起学长学姐讲述面试官的可怕，面试前我内心十分害怕，紧张万分。说实话，总觉得面试是很遥远的事情，但不知不觉你已经走到这一步，感觉一切都始料不及。不过还好，我的面试跟我想象的不太一样，面试官其实并没有那么可怕，他根据你的项目来进行提问，以及一些遇到实际问题，以你现在的技能，你该如何处理。当然，有的基础的，常见的他也会问。")]),t._v(" "),s("h2",{attrs:{id:"css-篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-篇"}},[t._v("#")]),t._v(" css 篇")]),t._v(" "),s("h3",{attrs:{id:"_1-用flex-有三个盒子-左右两个-宽度固定-实现中间盒子的宽度自适应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-用flex-有三个盒子-左右两个-宽度固定-实现中间盒子的宽度自适应"}},[t._v("#")]),t._v(" 1.用flex 有三个盒子 左右两个 宽度固定 实现中间盒子的宽度自适应")]),t._v(" "),s("p",[t._v("这个题就很简单了，我们只需要父容器 "),s("code",[t._v("display: flex")]),t._v(" 中间的盒子 "),s("code",[t._v("flex: 1")]),t._v("即可。紧接着面试官就问：flex的属性有哪些？同样也简单")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("display")])])]),t._v(" "),s("p",[s("code",[t._v("display")]),t._v(" 属性必须设置为 "),s("code",[t._v("flex")]),t._v(" 或 "),s("code",[t._v("inline-flex")]),t._v("，才能开启 Flexbox 布局。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("flex-direction")])])]),t._v(" "),s("p",[s("code",[t._v("flex-direction")]),t._v(" 属性控制主轴方向，默认值为 "),s("code",[t._v("row")]),t._v("（从左到右布局）。可以使用以下取值：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("row")]),t._v(": 主轴从左到右。")]),t._v(" "),s("li",[s("code",[t._v("row-reverse")]),t._v(": 主轴从右到左。")]),t._v(" "),s("li",[s("code",[t._v("column")]),t._v(": 主轴从上到下。")]),t._v(" "),s("li",[s("code",[t._v("column-reverse")]),t._v(": 主轴从下到上。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("code",[t._v("flex-wrap")])])]),t._v(" "),s("p",[s("code",[t._v("flex-wrap")]),t._v(" 属性控制是否换行，默认情况下项目都排在一条线上，可以使用以下取值：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("nowrap")]),t._v(": 不换行。")]),t._v(" "),s("li",[s("code",[t._v("wrap")]),t._v(": 换行，第一行在上方。")]),t._v(" "),s("li",[s("code",[t._v("wrap-reverse")]),t._v(": 换行，第一行在下方。")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("code",[t._v("justify-content")])])]),t._v(" "),s("p",[s("code",[t._v("justify-content")]),t._v(" 属性控制项目在主轴上的对齐方式，默认为 "),s("code",[t._v("flex-start")]),t._v("，即左对齐。可以使用以下取值：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("flex-start")]),t._v(": 左对齐。")]),t._v(" "),s("li",[s("code",[t._v("flex-end")]),t._v(": 右对齐。")]),t._v(" "),s("li",[s("code",[t._v("center")]),t._v(": 居中对齐。")]),t._v(" "),s("li",[s("code",[t._v("space-between")]),t._v(": 两端对齐，项目之间的间隔相等。")]),t._v(" "),s("li",[s("code",[t._v("space-around")]),t._v(": 项目分布在轴线上，两侧间隔相等。")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("code",[t._v("align-items")])])]),t._v(" "),s("p",[s("code",[t._v("align-items")]),t._v(" 属性控制项目在交叉轴上的对齐方式，默认为 "),s("code",[t._v("stretch")]),t._v("，即将项目拉伸至与容器一样高。可以使用以下取值：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("stretch")]),t._v(": 拉伸（默认值）。")]),t._v(" "),s("li",[s("code",[t._v("flex-start")]),t._v(": 交叉轴起点对齐。")]),t._v(" "),s("li",[s("code",[t._v("flex-end")]),t._v(": 交叉轴终点对齐。")]),t._v(" "),s("li",[s("code",[t._v("center")]),t._v(": 居中对齐。")]),t._v(" "),s("li",[s("code",[t._v("baseline")]),t._v(": 基线对齐。")])]),t._v(" "),s("p",[t._v("还有一些其他的属性，例如 "),s("code",[t._v("order")]),t._v("、"),s("code",[t._v("flex-grow")]),t._v("、"),s("code",[t._v("flex-shrink")]),t._v(" 等等，这里就不一一列举了。"),s("br"),t._v("\n当然我当时回答是时候并没有这么详细，有些当时记不太清了。")]),t._v(" "),s("h3",{attrs:{id:"_2-盒子的横向排列有哪些方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-盒子的横向排列有哪些方法"}},[t._v("#")]),t._v(" 2. 盒子的横向排列有哪些方法")]),t._v(" "),s("ol",[s("li",[t._v("使用 "),s("code",[t._v("float")]),t._v(" 属性")])]),t._v(" "),s("p",[s("code",[t._v("float")]),t._v(" 属性可以让元素浮动到容器的左侧或右侧，从而实现横向排列的效果。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，当使用 "),s("code",[t._v("float")]),t._v(" 属性时，需要清除浮动以防止产生布局上的问题。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("使用 "),s("code",[t._v("display: inline-block")])])]),t._v(" "),s("p",[s("code",[t._v("display: inline-block")]),t._v(" 属性可以让元素表现为块级元素和行内元素的混合形态，从而实现横向排列的效果。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，由于 "),s("code",[t._v("inline-block")]),t._v(" 元素会受到字体大小等因素的影响，可能会产生不必要的间距，可以通过调整 HTML 结构或者使用负的 "),s("code",[t._v("margin")]),t._v(" 属性来解决。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("使用 "),s("code",[t._v("flexbox")])])]),t._v(" "),s("p",[s("code",[t._v("flexbox")]),t._v(" 是一种强大的布局方式，可以轻松地实现盒子的横向排列。(flex默认是横向排列)")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 让所有的盒子自适应宽度 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，如果要控制每个盒子的宽度和间距，需要设置 "),s("code",[t._v("flex-basis")]),t._v("、"),s("code",[t._v("flex-grow")]),t._v(" 和 "),s("code",[t._v("flex-shrink")]),t._v(" 等属性。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("使用 "),s("code",[t._v("grid")])])]),t._v(" "),s("p",[s("code",[t._v("grid")]),t._v(" 是一种新的布局方式，可以通过网格状的列和行将页面划分为不同的区域，从而实现盒子的横向排列。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1fr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 将容器分成四个等宽的列 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" span 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 控制每个盒子的跨度 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，由于 "),s("code",[t._v("grid")]),t._v(" 的兼容性问题，需要添加浏览器前缀或者使用其他方式来解决。")]),t._v(" "),s("h3",{attrs:{id:"_3-介绍lib-flexible-自己要实现怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-介绍lib-flexible-自己要实现怎么办"}},[t._v("#")]),t._v(" 3. 介绍lib-flexible，自己要实现怎么办")]),t._v(" "),s("p",[t._v("因为面试官看到了我项目中使用了"),s("code",[t._v("lib-flexible")]),t._v("来实现移动端适配。")]),t._v(" "),s("p",[s("code",[t._v("lib-flexible")]),t._v(" 是一款用于淘宝移动端适配的 JavaScript 库，能够根据屏幕大小和像素比例动态计算 "),s("code",[t._v("<meta>")]),t._v(" 标签中 "),s("code",[t._v("viewport")]),t._v(" 的宽度，并将其设置为 1/10 设备宽度的值。这样做可以让页面元素基于设计稿的实际尺寸进行布局，避免出现错位或者变形等问题。")]),t._v(" "),s("p",[t._v("使用 lib-flexible 可以方便地在不同分辨率的设备上提供良好的显示效果，并且能够自动适应新型设备的出现，同时也避免了手动计算和重新调整尺寸的繁琐过程。")]),t._v(" "),s("p",[t._v("自己实现：")]),t._v(" "),s("p",[t._v("如果需要自己实现一个类似 "),s("code",[t._v("lib-flexible")]),t._v(" 的适配方案，可以参考以下步骤：")]),t._v(" "),s("ol",[s("li",[t._v("获取设备的宽度信息")])]),t._v(" "),s("p",[t._v("可以通过 JavaScript 中的 "),s("code",[t._v("window.screen.width")]),t._v(" 和 "),s("code",[t._v("window.devicePixelRatio")]),t._v(" 属性来获取设备的宽度和像素比例信息。需要注意的是，由于浏览器可能会对这些属性进行缩放，因此可能需要使用一些诸如 "),s("code",[t._v("window.innerWidth")]),t._v(" 等方法来获取准确的数值。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("动态计算 viewport 的宽度")])]),t._v(" "),s("p",[t._v("根据设计稿的尺寸和像素密度，可以通过公式 "),s("code",[t._v("viewportWidth = designWidth * devicePixelRatio / 10")]),t._v(" 来动态计算出 "),s("code",[t._v("<meta>")]),t._v(" 标签中 "),s("code",[t._v("viewport")]),t._v(" 的宽度，并将其设置为文档头部的元数据。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width,initial-scale=1,user-scalable=no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算 viewport 宽度并设置 meta 标签")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dpr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" vw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("screen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'meta[name=\"viewport\"]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("width=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("vw"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dpr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",initial-scale=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dpr"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",maximum-scale=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dpr"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",minimum-scale=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dpr"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(",user-scalable=no")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("其中，"),s("code",[t._v("initial-scale")]),t._v(" 表示初始缩放比例，"),s("code",[t._v("maximum-scale")]),t._v(" 和 "),s("code",[t._v("minimum-scale")]),t._v(" 都设置为 1/dp，即默认不允许用户手动缩放。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("根据屏幕大小设置字体大小")])]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("<html>")]),t._v(" 元素上设置一个基础字体大小，然后配合 "),s("code",[t._v("rem")]),t._v(" 单位来实现元素的自适应。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置 <html> 的基础字体大小 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100vw / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("designWidth / 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 定义样式 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.75rem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 假设设计稿宽度为375px */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.25rem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("其中，"),s("code",[t._v("calc()")]),t._v(" 函数可以帮助计算得到基础字体大小，通过将设备宽度除以设计稿宽度再除以 10 得到，而元素的大小则使用 "),s("code",[t._v("rem")]),t._v(" 单位设置，保证其相对于基础字体的正确性。")]),t._v(" "),s("p",[t._v("需要注意的是，以上只是基本实现方法，还有很多其他细节和效果需要根据具体需求来调整。同时也要注意可能存在的兼容性问题和不同浏览器的行为差异。")]),t._v(" "),s("h2",{attrs:{id:"js-篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-篇"}},[t._v("#")]),t._v(" js 篇")]),t._v(" "),s("h3",{attrs:{id:"_1-js-的数据类型有哪些-类型判断的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-js-的数据类型有哪些-类型判断的方法"}},[t._v("#")]),t._v(" 1. js 的数据类型有哪些，类型判断的方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本数据类型（值类型）："),s("code",[t._v("Number")]),t._v("、"),s("code",[t._v("String")]),t._v("、"),s("code",[t._v("Boolean")]),t._v("、"),s("code",[t._v("Null")]),t._v("、"),s("code",[t._v("Undefined")]),t._v("、"),s("code",[t._v("Symbol")]),t._v("、"),s("code",[t._v("BigInt")]),t._v("。保存在栈内存中。")])]),t._v(" "),s("li",[s("p",[t._v("复杂数据类型（引用类型）："),s("code",[t._v("Object")]),t._v("、"),s("code",[t._v("Function")]),t._v("、"),s("code",[t._v("Array")]),t._v("、"),s("code",[t._v("RegExp")]),t._v("、"),s("code",[t._v("Date")]),t._v(" 基本包装类型及单体内置对象("),s("code",[t._v("Global")]),t._v("、"),s("code",[t._v("Math")]),t._v(")等。")])])]),t._v(" "),s("p",[t._v("类型判断方法：")]),t._v(" "),s("p",[t._v("在 JavaScript 中，有多种方式可以判断数据类型，包括以下：")]),t._v(" "),s("ol",[s("li",[t._v("typeof")])]),t._v(" "),s("p",[s("code",[t._v("typeof")]),t._v(" 操作符可以返回一个值的字符串表示形式，代表其对应的基本数据类型。但是 "),s("code",[t._v("typeof")]),t._v(" 在某些情况下有一些奇怪的行为，例如将数组视为 "),s("code",[t._v("object")]),t._v(" 类型，把 null 视为对象。使用时需要注意。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object' ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("instanceof")])]),t._v(" "),s("p",[s("code",[t._v("instanceof")]),t._v(" 操作符用于检查特定对象是否属于某个类或者构造函数的原型链上。它适用于自定义类型的检测，但不适用于基本类型和内置对象类型的检测。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'str'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Object.prototype.toString()")])]),t._v(" "),s("p",[t._v("每个对象都有一个原型链，可以调用 "),s("code",[t._v("Object.prototype.toString()")]),t._v(" 方法，获取对象的内部属性 [[Class]] 的值，从而判断其类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Number]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object String]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Boolean]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Undefined]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Null]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Array]"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n")])])]),s("p",[t._v("需要注意的是，使用 "),s("code",[t._v("Object.prototype.toString()")]),t._v(" 的方式可以准确判断变量类型，但也存在一些小问题，例如无法准确判断某些对象是否为继承自某个内置类或构造函数的子类对象等情况。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Array.isArray()")])]),t._v(" "),s("p",[s("code",[t._v("Array.isArray()")]),t._v(" 方法用于检测一个值是否为数组。它只能用于判断对象是否为数组，而不能用于其他类型。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-js-的数组遍历的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-js-的数组遍历的方法"}},[t._v("#")]),t._v(" 2. js 的数组遍历的方法")]),t._v(" "),s("ol",[s("li",[t._v("for 循环")])]),t._v(" "),s("p",[t._v("使用传统的 for 循环可以遍历数组中的所有元素。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("forEach 方法")])]),t._v(" "),s("p",[s("code",[t._v("forEach()")]),t._v(" 方法用于遍历数组，接收一个回调函数作为参数。该回调函数接收当前元素、当前元素的索引和整个数组作为参数。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("map 方法")])]),t._v(" "),s("p",[s("code",[t._v("map()")]),t._v(" 方法返回一个新数组，其结果是对原始数组中每个元素进行指定函数的操作后得到的值。该函数接收三个参数：当前元素，当前元素索引和整个数组。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newArr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newArr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: [2, 4, 6]")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("filter 方法")])]),t._v(" "),s("p",[s("code",[t._v("filter()")]),t._v(" 方法用于过滤数组中的元素，并返回符合条件的元素所组成的新数组。该函数接收三个参数：当前元素，当前元素索引和整个数组。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newArr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newArr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: [3, 4, 5]")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("reduce 方法")])]),t._v(" "),s("p",[s("code",[t._v("reduce()")]),t._v(" 方法依次对数组中的所有元素执行指定函数，并返回一个累加值。该函数接收两个参数：归并函数和初始值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" acc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: 15")]),t._v("\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("for...of 循环")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("for...of")]),t._v(" 循环可以遍历数组中的所有元素，将当前元素赋值给一个变量。该方法不能获取当前元素的索引信息，适用于只需要访问元素值的场景。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("for...in 循环")])]),t._v(" "),s("p",[s("code",[t._v("for...in")]),t._v(" 循环遍历对象的属性名称或数组的索引。该方法也可以用于遍历数组，但是不是推荐的做法，因为它会遍历所有可枚举属性，包括原型链上的属性和一些非数值类型的属性。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-你对-js-的-this-关键字的理解以及-this-的指向问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-你对-js-的-this-关键字的理解以及-this-的指向问题"}},[t._v("#")]),t._v(" 3. 你对 js 的 this 关键字的理解以及 this 的指向问题")]),t._v(" "),s("p",[t._v("在 JavaScript 中，"),s("code",[t._v("this")]),t._v(" 关键字指向当前执行代码的对象，其值在函数被调用时确定。具体表现如下：")]),t._v(" "),s("ol",[s("li",[t._v("全局环境中，"),s("code",[t._v("this")]),t._v(" 指向 "),s("code",[t._v("window")]),t._v(" 对象。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: true")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("函数内部，"),s("code",[t._v("this")]),t._v(" 的值取决于函数的调用方式和上下文环境。")])]),t._v(" "),s("p",[t._v("（1）作为普通函数调用，"),s("code",[t._v("this")]),t._v(" 指向全局对象或 undefined（严格模式下）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: window")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: undefined")]),t._v("\n")])])]),s("p",[t._v("（2）作为对象的方法调用，"),s("code",[t._v("this")]),t._v(" 指向调用该方法的对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: John")]),t._v("\n")])])]),s("p",[t._v("（3）作为构造函数调用，"),s("code",[t._v("this")]),t._v(" 指向新创建的实例对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" john "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\njohn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: John")]),t._v("\n")])])]),s("p",[t._v("（4）使用 "),s("code",[t._v("call()")]),t._v(" 或 "),s("code",[t._v("apply()")]),t._v(" 方法调用，"),s("code",[t._v("this")]),t._v(" 指向第一个参数所指定的对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: John")]),t._v("\n")])])]),s("p",[t._v("（5）使用 "),s("code",[t._v("bind()")]),t._v(" 方法返回一个新函数，其 "),s("code",[t._v("this")]),t._v(" 值被绑定为第一个参数所指定的对象。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" boundTest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("boundTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: John")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-js-中获取元素的方法-和原生js-的增删改查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-js-中获取元素的方法-和原生js-的增删改查"}},[t._v("#")]),t._v(" 4. js 中获取元素的方法，和原生js 的增删改查")]),t._v(" "),s("p",[t._v("（一）、获取元素")]),t._v(" "),s("ol",[s("li",[t._v("通过 "),s("code",[t._v("id")]),t._v(" 属性获取元素：使用 "),s("code",[t._v("document.getElementById(id)")]),t._v(" 方法可以获得拥有指定 "),s("code",[t._v("id")]),t._v(" 属性的元素对象。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myElement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-element"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("通过标签名获取元素：使用 "),s("code",[t._v("document.getElementsByTagName(tagname)")]),t._v(" 方法可以获取所有指定标签名的元素集合。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myElements "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("通过类名获取元素：使用 "),s("code",[t._v("document.getElementsByClassName(classname)")]),t._v(" 方法可以获取所有指定类名的元素集合。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myElements "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-class"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("通过选择器获取元素：通过使用 "),s("code",[t._v("document.querySelector(selector)")]),t._v(" 或 "),s("code",[t._v("document.querySelectorAll(selector)")]),t._v(" 方法，可以根据 CSS 选择器获取符合条件的第一个元素或所有元素。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myElement1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#my-div"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myElements2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".my-class"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("通过父元素和位置关系获取子元素：使用 "),s("code",[t._v("parentElement.childNodes[index]")]),t._v("、"),s("code",[t._v("parentElement.firstChild")]),t._v(" 和 "),s("code",[t._v("parentElement.lastChild")]),t._v(" 可以获取指定父元素下的指定位置的子元素或第一个/最后一个子元素。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("需要注意的是，某些方法返回的是类数组的实例，需要通过 "),s("code",[t._v("Array.from()")]),t._v(" 或 "),s("code",[t._v("Array.prototype.slice.call()")]),t._v(" 方法将其转换成数组才能使用数组的方法。")]),t._v(" "),s("p",[t._v("（二）、增删改查")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("增加新元素：使用 "),s("code",[t._v("document.createElement(tagname)")]),t._v(" 方法创建新的元素节点，并使用 "),s("code",[t._v("element.appendChild(newNode)")]),t._v(" 或 "),s("code",[t._v("element.insertBefore(newNode, refNode)")]),t._v(" 方法将其添加到页面中。")])]),t._v(" "),s("li",[s("p",[t._v("删除元素：使用 "),s("code",[t._v("element.removeChild(child)")]),t._v(" 方法移除指定元素的子节点或 "),s("code",[t._v("element.remove()")]),t._v(" 方法直接移除该元素本身。")])]),t._v(" "),s("li",[s("p",[t._v("修改元素内容和属性：使用 "),s("code",[t._v("element.innerHTML")]),t._v("、"),s("code",[t._v("element.innerText")]),t._v(" 或 "),s("code",[t._v("element.setAttribute(attr, value)")]),t._v(" 分别修改元素的 HTML 内容、纯文本内容和指定属性的值。")])]),t._v(" "),s("li",[s("p",[t._v("查询元素信息：使用 "),s("code",[t._v("document.getElementById(id)")]),t._v("、"),s("code",[t._v("document.getElementsByTagName(name)")]),t._v("、"),s("code",[t._v("document.getElementsByClassName(name)")]),t._v("、"),s("code",[t._v("document.querySelector(selector)")]),t._v(" 或 "),s("code",[t._v("document.querySelectorAll(selector)")]),t._v(" 等方法查询元素信息，并使用元素的属性和方法获取其更多信息。")])])]),t._v(" "),s("p",[t._v("具体的例子这里就不写了，（问这个我是没想到的）但也确实回答的不是很全面，只记得常见的一些。")]),t._v(" "),s("h2",{attrs:{id:"vue-篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-篇"}},[t._v("#")]),t._v(" vue 篇")]),t._v(" "),s("h3",{attrs:{id:"_1-v-for和v-if优先级的问题-在vue2-vue3-中-这里面试官没问为什么v-for-和-v-if-不建议一起使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-v-for和v-if优先级的问题-在vue2-vue3-中-这里面试官没问为什么v-for-和-v-if-不建议一起使用"}},[t._v("#")]),t._v(" 1. v-for和v-if优先级的问题，在vue2 ， vue3 中（这里面试官没问为什么v-for 和 v-if 不建议一起使用）")]),t._v(" "),s("p",[t._v("Vue 2 中，"),s("code",[t._v("v-for")]),t._v("的优先级比"),s("code",[t._v("v-if")]),t._v("高，这意味着"),s("code",[t._v("v-if")]),t._v("将分别重复运行于每一个"),s("code",[t._v("v-for")]),t._v("循环中。如果要遍历的数组很大，而真正要展示的数据很少时，将造成很大的性能浪费。")]),t._v(" "),s("p",[t._v("Vue 3 中，则完全相反，"),s("code",[t._v("v-if")]),t._v("的优先级高于"),s("code",[t._v("v-for")]),t._v("，所以"),s("code",[t._v("v-if")]),t._v("执行时，它调用的变量还不存在，会导致异常。")]),t._v(" "),s("p",[t._v("在 Vue 中，"),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v(" 是两个常用的指令，但不建议将它们一起使用，主要有以下几点原因：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("逻辑混乱：将 "),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v(" 放在一起使用时，很容易造成代码逻辑的混乱。因为 "),s("code",[t._v("v-if")]),t._v(" 的作用是根据条件控制元素是否渲染，并且它可以存在于同一个元素上或其父元素上；而 "),s("code",[t._v("v-for")]),t._v(" 的作用是遍历数据并渲染元素，并且它只能存在于元素上。将两者一起使用时，会让代码更难以理解和调试。")])]),t._v(" "),s("li",[s("p",[t._v("效率低下：将 "),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v(" 放在一起使用时，可能会导致不必要的计算开销和性能问题。因为当 "),s("code",[t._v("v-if")]),t._v(" 条件不成立时，会在渲染时直接跳过整个列表遍历循环。然而，如果在每次循环中都要计算一次 "),s("code",[t._v("v-if")]),t._v(" 表达式的值，就会加重计算的负担，降低性能。")])]),t._v(" "),s("li",[s("p",[t._v("可读性差：使用 "),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v(" 描述复杂嵌套关系时，代码可读性会变得很差。尤其是针对初学者来说，一旦代码中存在复杂的嵌套和逻辑，就会容易出现错误，从而导致代码难以维护。")])])]),t._v(" "),s("p",[t._v("因此，在 Vue 的开发中，我们应该尽量避免在同一元素中同时使用 "),s("code",[t._v("v-if")]),t._v(" 和 "),s("code",[t._v("v-for")]),t._v(" 指令。如果确实需要使用这两个指令，则应尽可能将它们拆分成不同的元素，并使用计算属性或过滤器来处理数据，以提高代码效率和可读性。")]),t._v(" "),s("h3",{attrs:{id:"_2-vue-组件之间数据传递的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue-组件之间数据传递的方法"}},[t._v("#")]),t._v(" 2. vue 组件之间数据传递的方法")]),t._v(" "),s("p",[t._v("这里面试官只问了我，父子，爷孙之间的传递方法。")]),t._v(" "),s("ol",[s("li",[t._v("props 和 $emit")])]),t._v(" "),s("p",[t._v("父组件向子组件传递数据可以使用 props，子组件向父组件传递数据可以使用 $emit 发送事件。通过这两个基本的 API 可以搭建起一个完整的组件通信机制。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("provide 和 inject")])]),t._v(" "),s("p",[t._v("provide 和 inject 是用于祖先组件向后代组件传递数据的高级特性。祖先组件通过调用 provide 来定义一个变量，然后在后代组件中通过 inject 来注入该变量来传递数据。它可以将一些共享的状态跨过多层组件传递给各层子组件。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Vuex 状态管理")])]),t._v(" "),s("p",[t._v("Vuex 是 Vue 的官方状态管理库，用于集中管理应用程序中的所有组件的状态。Vuex 的特点是将全部组件的状态存储在一个全局 store 对象中，从而使得任何组件都能够访问这个对象中的状态，并且在其中更改状态后，其他组件也能够立即获知。")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("event bus")])]),t._v(" "),s("p",[t._v("event bus 是指创建一个新的 Vue 实例，在其中利用 $emit 和 $on 方法来进行组件之间的通信。通过将一个实例作为公共事件中心，所有组件都可以来监听、广播、接收和发送信息，从而实现了组件之间的解耦。")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("插槽")])]),t._v(" "),s("p",[t._v("插槽是一种特殊的组件内容分发方式，可以允许父组件向子组件传递任意模板内容。在使用时，需要在父组件中将要分发的内容，用 slot 标签包装起来，然后在子组件中利用 $slot 对它进行挂载和渲染。")]),t._v(" "),s("h3",{attrs:{id:"_3-你对vue3-setup-的理解-两个参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-你对vue3-setup-的理解-两个参数"}},[t._v("#")]),t._v(" 3. 你对vue3 setup 的理解 （两个参数）")]),t._v(" "),s("p",[s("code",[t._v("setup")]),t._v(" 是 Vue 3 中的一个新特性，它是用于编写组件逻辑的新的选项。相比于 Vue 2.x 中的 "),s("code",[t._v("data")]),t._v("、"),s("code",[t._v("computed")]),t._v("、"),s("code",[t._v("methods")]),t._v(" 等选项，"),s("code",[t._v("setup")]),t._v(" 更加灵活和简洁。")]),t._v(" "),s("p",[t._v("在使用 "),s("code",[t._v("setup")]),t._v(" 时，需要将组件选项中的 "),s("code",[t._v("data")]),t._v("、"),s("code",[t._v("computed")]),t._v("、"),s("code",[t._v("methods")]),t._v(" 等属性全部移除，同时将它们的内容放到 "),s("code",[t._v("setup")]),t._v(" 函数中。")]),t._v(" "),s("p",[s("code",[t._v("setup")]),t._v(" 函数接收两个参数："),s("code",[t._v("props")]),t._v(" 和 "),s("code",[t._v("context")]),t._v("。"),s("code",[t._v("props")]),t._v(" 是一个对象，包含了从父组件传递下来的所有属性，"),s("code",[t._v("context")]),t._v(" 是一个对象，包含了一些常用的组件上下文，例如 "),s("code",[t._v("attrs")]),t._v("、"),s("code",[t._v("slots")]),t._v("、"),s("code",[t._v("emit")]),t._v(" 等。")]),t._v(" "),s("p",[s("code",[t._v("setup")]),t._v(" 函数需要返回一个对象，该对象包含了组件中需要用到的数据、方法和内部状态等。这个返回对象会被 Vue 3 编译器处理成一个渲染函数的上下文，从而实现了组件逻辑的编写。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("setup")]),t._v(" 的好处在于它可以更好地实现逻辑的复用和组合。可以将组件中的逻辑封装成一个独立的函数，然后在多个组件中共用，从而提高了代码的可维护性和复用性。")]),t._v(" "),s("p",[t._v("在 Vue 3 中，"),s("code",[t._v("setup")]),t._v(" 函数接收两个参数："),s("code",[t._v("props")]),t._v(" 和 "),s("code",[t._v("context")]),t._v("。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("props")])])]),t._v(" "),s("p",[s("code",[t._v("props")]),t._v(" 是一个对象，包含了从父组件传递下来的所有属性。在 "),s("code",[t._v("setup")]),t._v(" 函数中，可以通过 "),s("code",[t._v("props")]),t._v(" 对象来访问这些属性。例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("setup(props) {\n  console.log(props.title) // 访问父组件传递的 title 属性\n}\n")])])]),s("p",[t._v("需要注意的是，在 "),s("code",[t._v("setup")]),t._v(" 函数中，"),s("code",[t._v("props")]),t._v(" 对象是只读的，不能直接修改其中的属性值。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("code",[t._v("context")])])]),t._v(" "),s("p",[s("code",[t._v("context")]),t._v(" 是一个对象，包含了一些常用的组件上下文，例如 "),s("code",[t._v("attrs")]),t._v("、"),s("code",[t._v("slots")]),t._v("、"),s("code",[t._v("emit")]),t._v(" 等。其中，"),s("code",[t._v("attrs")]),t._v(" 包含了组件接收到的所有非 props 属性，"),s("code",[t._v("slots")]),t._v(" 包含了组件插槽的内容，"),s("code",[t._v("emit")]),t._v(" 是一个函数，用于触发自定义事件。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("setup(props, context) {\n  console.log(context.attrs) // 访问所有非 props 属性\n  console.log(context.slots) // 访问插槽内容\n  context.emit('custom-event') // 触发自定义事件\n}\n")])])]),s("p",[t._v("需要注意的是，在 "),s("code",[t._v("setup")]),t._v(" 函数中，"),s("code",[t._v("context")]),t._v(" 对象也是只读的，不能直接修改其中的属性值。")]),t._v(" "),s("p",[t._v("通过 "),s("code",[t._v("props")]),t._v(" 和 "),s("code",[t._v("context")]),t._v(" 这两个参数，我们可以在 "),s("code",[t._v("setup")]),t._v(" 函数中访问组件的属性和上下文，并根据需要进行处理和操作，从而实现组件的逻辑编写。")]),t._v(" "),s("p",[t._v("面试官还问我 props 参数是响应式的吗？"),s("br"),t._v("\n在 Vue 3 中，"),s("code",[t._v("setup")]),t._v(" 函数的参数 "),s("code",[t._v("props")]),t._v(" 是响应式的，但是它是一个只读的响应式对象。\n当父组件的 "),s("code",[t._v("props")]),t._v(" 发生变化时，子组件的 "),s("code",[t._v("props")]),t._v(" 对象也会跟着更新。")]),t._v(" "),s("p",[t._v("用"),s("code",[t._v("es6")]),t._v("的解构"),s("code",[t._v("props")]),t._v("出来的是响应式的吗？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，使用 ES6 的解构语法解构 "),s("code",[t._v("props")]),t._v(" 对象中的属性时，得到的结果并不是响应式的。")]),t._v(" "),s("p",[t._v("要把它变成响应式的怎么办？")]),t._v(" "),s("p",[t._v("在 Vue 3 中，如果需要将 ES6 解构出来的变量变成响应式，可以使用 "),s("code",[t._v("toRef")]),t._v(" 或 "),s("code",[t._v("toRefs")]),t._v(" 函数将其转换成响应式对象。")]),t._v(" "),s("p",[s("code",[t._v("toRef")]),t._v(" 函数的作用是将一个简单的值或对象的属性转换成一个响应式的 Ref 对象。")]),t._v(" "),s("p",[s("code",[t._v("toRefs")]),t._v(" 函数可以将一个对象的所有属性转换成响应式的 Ref 对象，并返回一个新的对象，其中每个属性都是一个响应式的 Ref 对象。")]),t._v(" "),s("p",[t._v("需要注意的是，使用 "),s("code",[t._v("toRefs")]),t._v(" 函数将对象的所有属性转换成响应式的 Ref 对象时，如果对象中有嵌套对象，嵌套对象的属性并不会转换成响应式的 Ref 对象。这时可以使用递归的方式，将嵌套对象中的属性也转换成响应式的 Ref 对象。")]),t._v(" "),s("p",[s("code",[t._v("ref")]),t._v(" 函数的作用是将一个简单的值转换成一个响应式的 Ref 对象。")]),t._v(" "),s("p",[t._v("需要注意的是，"),s("code",[t._v("ref")]),t._v(" 函数只能将一个简单的值转换成响应式的 Ref 对象，而无法将对象本身转换成响应式对象。如果需要将对象变成响应式对象，可以使用 "),s("code",[t._v("reactive")]),t._v(" 函数。")]),t._v(" "),s("p",[s("code",[t._v("reactive")]),t._v(" 函数的作用是将一个对象转换成一个响应式的 Proxy 对象。")]),t._v(" "),s("p",[t._v("需要注意的是，"),s("code",[t._v("reactive")]),t._v(" 函数只能将对象本身转换成响应式的 Proxy 对象，而无法将对象中嵌套的属性转换成响应式对象。如果需要将对象中嵌套的属性也转换成响应式对象，可以使用递归的方式，将嵌套对象中的属性也转换成响应式对象。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("以上就是我这一次面试的全部题目（应该是大部分都记录下来了）。可以看到其实问题都没有特别难，甚至可以说是相当基础，但是我当时面试时其实回答的没有特别全面和清晰。这也反映了自己的问题，知识掌握的不够透彻，理解不够深入。"),s("br"),t._v("\n当然，紧张、心态不好、经验不足等因素都可能影响发挥。我在面试时候其实还好，没有特别紧张，甚至和面试官有说有笑。我觉得这是十分重要的，不要胆怯，不要害怕，脸皮厚点。就算是遇到不会的，或者是不清楚的也不必慌张。"),s("br"),t._v("\n面试结束后的总结和复盘也是十分重要的，我一般面试结束后会立刻回忆面试遇到的题目，记录下来，回想自己当时的回答，看看是否有不对的或不全面的，总结问题，改正问题，吸取教训。")])])}),[],!1,null,null,null);s.default=e.exports}}]);